node_modules/create-react-class/node_modules/fbjs/lib/UserAgent.js.flow:   * - UIWebView
node_modules/create-react-class/node_modules/fbjs/lib/UserAgent.js:   * - UIWebView
node_modules/fbjs/lib/UserAgent.js.flow:   * - UIWebView
node_modules/fbjs/lib/UserAgent.js:   * - UIWebView
node_modules/jetifier/mapping/androidx-class-mapping.csv:android.support.test.espresso.web.assertion.RemoteWebViewAssertions,androidx.test.espresso.web.assertion.RemoteWebViewAssertions
node_modules/jetifier/mapping/androidx-class-mapping.csv:android.support.test.espresso.web.assertion.WebViewAssertions,androidx.test.espresso.web.assertion.WebViewAssertions
node_modules/react-native/React.podspec:                              "React/Views/RCTWebView*"
node_modules/react-native/local-cli/templates/HelloWorld/android/app/proguard-rules.pro:# If your project uses WebView with JS, uncomment the following
node_modules/react-native/Libraries/react-native/react-native-implementation.js:  get WebView() {
node_modules/react-native/Libraries/react-native/react-native-implementation.js:        'WebView has been extracted from react-native core and will be removed in a future release. ' +
node_modules/react-native/Libraries/react-native/react-native-implementation.js:    return require('WebView');
node_modules/react-native/Libraries/Components/WebView/WebViewShared.js:const WebViewShared = {
node_modules/react-native/Libraries/Components/WebView/WebViewShared.js:module.exports = WebViewShared;
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:const WebViewShared = require('WebViewShared');
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:const WebViewState = keyMirror({
node_modules/react-native/Libraries/Components/WebView/WebView.android.js: * Renders a native WebView.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:class WebView extends React.Component {
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:    startInLoadingState: PropTypes.bool, // force WebView to show loadingView on first load
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * Loads static html or a uri (with optional headers) in the WebView.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:         * The URI to load in the WebView. Can be a local or remote file.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:         * A static HTML page to display in the WebView.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * If true, use WKWebView instead of UIWebView.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * Used on Android only, JS is enabled by default for WebView on iOS
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * by default for WebView on Android Kitkat and below and on iOS
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * Sets the user-agent for this WebView. The user-agent can also be set in native using
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * WebViewConfig. This prop will overwrite that config.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * Function that accepts a string that will be passed to the WebView and
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * Specifies the mixed content mode. i.e WebView will allow a secure origin to load content from any other origin.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * - `'never'` (default) - WebView will not allow a secure origin to load content from an insecure origin.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * - `'always'` - WebView will allow a secure origin to load content from any other origin, even if that origin is insecure.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * - `'compatibility'` -  WebView will attempt to be compatible with the approach of a modern web browser with regard to mixed content.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * Override the native component used to render the WebView. Enables a custom native
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * WebView which uses the same JavaScript as the original WebView.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:       * The native component used to render the WebView.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:       * Set props directly on the native component WebView. Enables custom props which the
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:       * original WebView doesn't pass through.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * make {@link com.facebook.react.views.webview.ReactWebViewClient} to launch a
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:     * Use this to list URLs that WebView cannot handle, e.g. a PDF url.
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:    originWhitelist: WebViewShared.defaultOriginWhitelist,
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:    viewState: WebViewState.IDLE,
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      this.setState({viewState: WebViewState.LOADING});
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:    if (this.state.viewState === WebViewState.LOADING) {
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:    } else if (this.state.viewState === WebViewState.ERROR) {
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:    } else if (this.state.viewState !== WebViewState.IDLE) {
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:        'RCTWebView invalid state encountered: ' + this.state.loading,
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      this.state.viewState === WebViewState.LOADING ||
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      this.state.viewState === WebViewState.ERROR
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:        'WebView: `source.headers` is not supported when using POST.',
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      console.warn('WebView: `source.body` is not supported when using GET.');
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      WebViewShared.originWhitelistToRegex,
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:    let NativeWebView = nativeConfig.component || RCTWebView;
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      <NativeWebView
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      this.getWebViewHandle(),
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      UIManager.getViewManagerConfig('RCTWebView').Commands.goForward,
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      this.getWebViewHandle(),
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      UIManager.getViewManagerConfig('RCTWebView').Commands.goBack,
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      viewState: WebViewState.LOADING,
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      this.getWebViewHandle(),
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      UIManager.getViewManagerConfig('RCTWebView').Commands.reload,
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      this.getWebViewHandle(),
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      UIManager.getViewManagerConfig('RCTWebView').Commands.stopLoading,
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      this.getWebViewHandle(),
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      UIManager.getViewManagerConfig('RCTWebView').Commands.postMessage,
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:   * Injects a javascript string into the referenced WebView. Deliberately does not
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      this.getWebViewHandle(),
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      UIManager.getViewManagerConfig('RCTWebView').Commands.injectJavaScript,
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:  getWebViewHandle = () => {
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      viewState: WebViewState.ERROR,
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:      viewState: WebViewState.IDLE,
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:const RCTWebView = requireNativeComponent('RCTWebView');
node_modules/react-native/Libraries/Components/WebView/WebView.android.js:module.exports = WebView;
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:const WebViewShared = require('WebViewShared');
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:const RCTWebViewManager = require('NativeModules').WebViewManager;
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:const RCTWKWebViewManager = require('NativeModules').WKWebViewManager;
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:const WebViewState = keyMirror({
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js: * `WebView` renders web content in a native view.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js: * import { WebView } from 'react-native';
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js: *       <WebView
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:class WebView extends React.Component {
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * Loads static html or a uri (with optional headers) in the WebView.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:         * The URI to load in the `WebView`. Can be a local or remote file.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:         * A static HTML page to display in the WebView.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * If true, use WKWebView instead of UIWebView.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * Function that is invoked when the `WebView` has finished loading.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * Function that is invoked when the `WebView` load succeeds or fails.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * Function that is invoked when the `WebView` starts loading.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * Function that is invoked when the `WebView` load fails.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * `WebView`. The default value is `true`.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * Function that is invoked when the `WebView` loading starts or ends.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * Boolean value that forces the `WebView` to show the loading view
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * The style to apply to the `WebView`.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * Boolean value to enable JavaScript in the `WebView`. Used on Android only
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * Boolean value to enable third party cookies in the `WebView`. Used on
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * Sets the user-agent for the `WebView`.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * Function that accepts a string that will be passed to the WebView and
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * Specifies the mixed content mode. i.e WebView will allow a secure origin to load content from any other origin.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * - `'never'` (default) - WebView will not allow a secure origin to load content from an insecure origin.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * - `'always'` - WebView will allow a secure origin to load content from any other origin, even if that origin is insecure.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * - `'compatibility'` -  WebView will attempt to be compatible with the approach of a modern web browser with regard to mixed content.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * Override the native component used to render the WebView. Enables a custom native
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:     * WebView which uses the same JavaScript as the original WebView.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:       * The native component used to render the WebView.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:       * Set props directly on the native component WebView. Enables custom props which the
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:       * original WebView doesn't pass through.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:    originWhitelist: WebViewShared.defaultOriginWhitelist,
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:    viewState: WebViewState.IDLE,
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      this.setState({viewState: WebViewState.LOADING});
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:    if (this.state.viewState === WebViewState.LOADING) {
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:    } else if (this.state.viewState === WebViewState.ERROR) {
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:    } else if (this.state.viewState !== WebViewState.IDLE) {
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:        'RCTWebView invalid state encountered: ' + this.state.loading,
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      this.state.viewState === WebViewState.LOADING ||
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      this.state.viewState === WebViewState.ERROR
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      viewManager = viewManager || RCTWKWebViewManager;
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      viewManager = viewManager || RCTWebViewManager;
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:    ].map(WebViewShared.originWhitelistToRegex);
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      const origin = WebViewShared.extractOrigin(url);
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:    let NativeWebView = nativeConfig.component;
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      NativeWebView = NativeWebView || RCTWKWebView;
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      NativeWebView = NativeWebView || RCTWebView;
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      <NativeWebView
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      return UIManager.getViewManagerConfig('RCTWebView').Commands;
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:    return UIManager.getViewManagerConfig('RCTWKWebView').Commands;
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      this.getWebViewHandle(),
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      this.getWebViewHandle(),
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:    this.setState({viewState: WebViewState.LOADING});
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      this.getWebViewHandle(),
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      this.getWebViewHandle(),
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      this.getWebViewHandle(),
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:   * Injects a javascript string into the referenced WebView. Deliberately does not
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      this.getWebViewHandle(),
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:   * Returns the native `WebView` node.
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:  getWebViewHandle = (): any => {
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      viewState: WebViewState.ERROR,
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:      viewState: WebViewState.IDLE,
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:const RCTWebView = requireNativeComponent(
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:  'RCTWebView',
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:  WebView,
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:  WebView.extraNativeComponentConfig,
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:const RCTWKWebView = requireNativeComponent(
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:  'RCTWKWebView',
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:  WebView,
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:  WebView.extraNativeComponentConfig,
node_modules/react-native/Libraries/Components/WebView/WebView.ios.js:module.exports = WebView;
Binary file node_modules/react-native/android/com/facebook/react/react-native/0.58.6/react-native-0.58.6-javadoc.jar matches
Binary file node_modules/react-native/android/com/facebook/react/react-native/0.58.6/react-native-0.58.6-sources.jar matches
node_modules/react-native/ReactAndroid/proguard-rules.pro:# If your project uses WebView with JS, uncomment the following
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/shell/MainReactPackage.java:import com.facebook.react.views.webview.ReactWebViewManager;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/shell/MainReactPackage.java:    viewManagers.add(new ReactWebViewManager());
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/modules/network/ForwardingCookieHandler.java: * Cookie handler that forwards all cookies to the WebView CookieManager.
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/WebViewConfig.java:import android.webkit.WebView;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/WebViewConfig.java: * Implement this interface in order to config your {@link WebView}. An instance of that
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/WebViewConfig.java: * implementation will have to be given as a constructor argument to {@link ReactWebViewManager}.
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/WebViewConfig.java:public interface WebViewConfig {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/WebViewConfig.java:  void configWebView(WebView webView);
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:import android.webkit.WebView;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:import android.webkit.WebViewClient;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java: * Manages instances of {@link WebView}
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java: * {@link WebView} instances could emit following direct events:
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:@ReactModule(name = ReactWebViewManager.REACT_CLASS)
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:public class ReactWebViewManager extends SimpleViewManager<WebView> {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public static final String REACT_CLASS = "RCTWebView";
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  protected WebViewConfig mWebViewConfig;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  protected @Nullable WebView.PictureListener mPictureListener;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  protected static class ReactWebViewClient extends WebViewClient {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    public void onPageFinished(WebView webView, String url) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:        ReactWebView reactWebView = (ReactWebView) webView;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:        reactWebView.callInjectedJavaScript();
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:        reactWebView.linkBridge();
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    public void onPageStarted(WebView webView, String url, Bitmap favicon) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:          createWebViewEvent(webView, url)));
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    public boolean shouldOverrideUrlLoading(WebView view, String url) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:      WebView webView,
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:      // Android WebView does it in the opposite way, so we need to simulate that behavior
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:      WritableMap eventData = createWebViewEvent(webView, failingUrl);
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    protected void emitFinishEvent(WebView webView, String url) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:          createWebViewEvent(webView, url)));
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    protected WritableMap createWebViewEvent(WebView webView, String url) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:   * Subclass of {@link WebView} that implements {@link LifecycleEventListener} interface in order
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:   * to call {@link WebView#destroy} on activity destroy event and also to clear the client
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  protected static class ReactWebView extends WebView implements LifecycleEventListener {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    protected @Nullable ReactWebViewClient mReactWebViewClient;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    protected class ReactWebViewBridge {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:      ReactWebView mContext;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:      ReactWebViewBridge(ReactWebView c) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:     * WebView must be created with an context of the current activity
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:     * Activity Context is required for creation of dialogs internally by WebView
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    public ReactWebView(ThemedReactContext reactContext) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    public void setWebViewClient(WebViewClient client) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:      super.setWebViewClient(client);
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:      mReactWebViewClient = (ReactWebViewClient)client;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    public @Nullable ReactWebViewClient getReactWebViewClient() {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:      return mReactWebViewClient;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    protected ReactWebViewBridge createReactWebViewBridge(ReactWebView webView) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:      return new ReactWebViewBridge(webView);
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:        addJavascriptInterface(createReactWebViewBridge(this), BRIDGE_NAME);
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:                FLog.w(ReactConstants.TAG, "Setting onMessage on a WebView overrides existing values of window.postMessage, but a previous value was defined");
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:      setWebViewClient(null);
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public ReactWebViewManager() {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    mWebViewConfig = new WebViewConfig() {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:      public void configWebView(WebView webView) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public ReactWebViewManager(WebViewConfig webViewConfig) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    mWebViewConfig = webViewConfig;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  protected ReactWebView createReactWebViewInstance(ThemedReactContext reactContext) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    return new ReactWebView(reactContext);
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  protected WebView createViewInstance(ThemedReactContext reactContext) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    ReactWebView webView = createReactWebViewInstance(reactContext);
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    mWebViewConfig.configWebView(webView);
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:      WebView.setWebContentsDebuggingEnabled(true);
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void setJavaScriptEnabled(WebView view, boolean enabled) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void setThirdPartyCookiesEnabled(WebView view, boolean enabled) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void setScalesPageToFit(WebView view, boolean enabled) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void setDomStorageEnabled(WebView view, boolean enabled) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void setUserAgent(WebView view, @Nullable String userAgent) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void setMediaPlaybackRequiresUserAction(WebView view, boolean requires) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void setAllowUniversalAccessFromFileURLs(WebView view, boolean allow) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void setSaveFormDataDisabled(WebView view, boolean disable) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void setInjectedJavaScript(WebView view, @Nullable String injectedJavaScript) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    ((ReactWebView) view).setInjectedJavaScript(injectedJavaScript);
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void setMessagingEnabled(WebView view, boolean enabled) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    ((ReactWebView) view).setMessagingEnabled(enabled);
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void setSource(WebView view, @Nullable ReadableMap source) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void setOnContentSizeChange(WebView view, boolean sendContentSizeChangeEvents) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void setMixedContentMode(WebView view, @Nullable String mixedContentMode) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    WebView view,
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    ReactWebViewClient client = ((ReactWebView) view).getReactWebViewClient();
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    WebView view,
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    WebView view,
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    WebView view,
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    ReactWebViewClient client = ((ReactWebView) view).getReactWebViewClient();
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  protected void addEventEmitters(ThemedReactContext reactContext, WebView view) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    // Do not register default touch emitter and let WebView implementation handle touches
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    view.setWebViewClient(new ReactWebViewClient());
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void receiveCommand(WebView root, int commandId, @Nullable ReadableArray args) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:          ReactWebView reactWebView = (ReactWebView) root;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:          reactWebView.evaluateJavascriptWithFallback("(function () {" +
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:        ReactWebView reactWebView = (ReactWebView) root;
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:        reactWebView.evaluateJavascriptWithFallback(args.getString(0));
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  public void onDropViewInstance(WebView webView) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    ((ThemedReactContext) webView.getContext()).removeLifecycleEventListener((ReactWebView) webView);
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:    ((ReactWebView) webView).cleanupCallbacksAndDestroy();
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  protected WebView.PictureListener getPictureListener() {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:      mPictureListener = new WebView.PictureListener() {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:        public void onNewPicture(WebView webView, Picture picture) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/views/webview/ReactWebViewManager.java:  protected static void dispatchEvent(WebView webView, Event event) {
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewManager.java:   * coordinates for a {@link ScrollView} or {@code goBack} request for a {@link WebView} instance.
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewManager.java:   * As an example we may consider {@link ReactWebViewManager} that expose the following commands:
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewManager.java:   * {@link ReactWebViewManager} will look as follows:
node_modules/react-native/ReactAndroid/src/main/java/com/facebook/react/uimanager/ViewManager.java:   * {@link ReactWebViewManager#receiveCommand} passing "3" as {@code commandId} argument.
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		13C156051AB1A2840079392D /* RCTWebView.m in Sources */ = {isa = PBXBuildFile; fileRef = 13C156021AB1A2840079392D /* RCTWebView.m */; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		13C156061AB1A2840079392D /* RCTWebViewManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 13C156041AB1A2840079392D /* RCTWebViewManager.m */; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		3D80D9961DF6FA890028D040 /* RCTWebView.h in Copy Headers */ = {isa = PBXBuildFile; fileRef = 13C156011AB1A2840079392D /* RCTWebView.h */; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		3D80D9971DF6FA890028D040 /* RCTWebViewManager.h in Copy Headers */ = {isa = PBXBuildFile; fileRef = 13C156031AB1A2840079392D /* RCTWebViewManager.h */; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		3D80DA901DF820620028D040 /* RCTWebView.h in Headers */ = {isa = PBXBuildFile; fileRef = 13C156011AB1A2840079392D /* RCTWebView.h */; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		3D80DA911DF820620028D040 /* RCTWebViewManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 13C156031AB1A2840079392D /* RCTWebViewManager.h */; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		3DA982341E5B0F7F004F2374 /* RCTWebView.h in Copy Headers */ = {isa = PBXBuildFile; fileRef = 13C156011AB1A2840079392D /* RCTWebView.h */; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		3DA982351E5B0F7F004F2374 /* RCTWebViewManager.h in Copy Headers */ = {isa = PBXBuildFile; fileRef = 13C156031AB1A2840079392D /* RCTWebViewManager.h */; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		50E98FEA21460B0D00CD9289 /* RCTWKWebViewManager.m in Sources */ = {isa = PBXBuildFile; fileRef = 50E98FE621460B0D00CD9289 /* RCTWKWebViewManager.m */; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		50E98FEB21460B0D00CD9289 /* RCTWKWebView.h in Headers */ = {isa = PBXBuildFile; fileRef = 50E98FE721460B0D00CD9289 /* RCTWKWebView.h */; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		50E98FEC21460B0D00CD9289 /* RCTWKWebView.m in Sources */ = {isa = PBXBuildFile; fileRef = 50E98FE821460B0D00CD9289 /* RCTWKWebView.m */; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		50E98FED21460B0D00CD9289 /* RCTWKWebViewManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 50E98FE921460B0D00CD9289 /* RCTWKWebViewManager.h */; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				3DA982341E5B0F7F004F2374 /* RCTWebView.h in Copy Headers */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				3DA982351E5B0F7F004F2374 /* RCTWebViewManager.h in Copy Headers */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				3D80D9961DF6FA890028D040 /* RCTWebView.h in Copy Headers */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				3D80D9971DF6FA890028D040 /* RCTWebViewManager.h in Copy Headers */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		13C156011AB1A2840079392D /* RCTWebView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = RCTWebView.h; sourceTree = "<group>"; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		13C156021AB1A2840079392D /* RCTWebView.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = RCTWebView.m; sourceTree = "<group>"; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		13C156031AB1A2840079392D /* RCTWebViewManager.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = RCTWebViewManager.h; sourceTree = "<group>"; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		13C156041AB1A2840079392D /* RCTWebViewManager.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = RCTWebViewManager.m; sourceTree = "<group>"; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		50E98FE621460B0D00CD9289 /* RCTWKWebViewManager.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = RCTWKWebViewManager.m; sourceTree = "<group>"; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		50E98FE721460B0D00CD9289 /* RCTWKWebView.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = RCTWKWebView.h; sourceTree = "<group>"; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		50E98FE821460B0D00CD9289 /* RCTWKWebView.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = RCTWKWebView.m; sourceTree = "<group>"; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:		50E98FE921460B0D00CD9289 /* RCTWKWebViewManager.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = RCTWKWebViewManager.h; sourceTree = "<group>"; };
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				50E98FE721460B0D00CD9289 /* RCTWKWebView.h */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				50E98FE821460B0D00CD9289 /* RCTWKWebView.m */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				50E98FE921460B0D00CD9289 /* RCTWKWebViewManager.h */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				50E98FE621460B0D00CD9289 /* RCTWKWebViewManager.m */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				13C156011AB1A2840079392D /* RCTWebView.h */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				13C156021AB1A2840079392D /* RCTWebView.m */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				13C156031AB1A2840079392D /* RCTWebViewManager.h */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				13C156041AB1A2840079392D /* RCTWebViewManager.m */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				50E98FED21460B0D00CD9289 /* RCTWKWebViewManager.h in Headers */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				50E98FEB21460B0D00CD9289 /* RCTWKWebView.h in Headers */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				3D80DA901DF820620028D040 /* RCTWebView.h in Headers */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				3D80DA911DF820620028D040 /* RCTWebViewManager.h in Headers */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				50E98FEA21460B0D00CD9289 /* RCTWKWebViewManager.m in Sources */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				13C156051AB1A2840079392D /* RCTWebView.m in Sources */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				50E98FEC21460B0D00CD9289 /* RCTWKWebView.m in Sources */,
node_modules/react-native/React/React.xcodeproj/project.pbxproj:				13C156061AB1A2840079392D /* RCTWebViewManager.m in Sources */,
node_modules/react-native/React/Views/RCTWebViewManager.h:@interface RCTWebViewManager : RCTViewManager
node_modules/react-native/React/Views/RCTWebView.h:@class RCTWebView;
node_modules/react-native/React/Views/RCTWebView.h:@protocol RCTWebViewDelegate <NSObject>
node_modules/react-native/React/Views/RCTWebView.h:- (BOOL)webView:(RCTWebView *)webView
node_modules/react-native/React/Views/RCTWebView.h:@interface RCTWebView : RCTView
node_modules/react-native/React/Views/RCTWebView.h:@property (nonatomic, weak) id<RCTWebViewDelegate> delegate;
node_modules/react-native/React/Views/RCTWKWebView.m:#import "RCTWKWebView.h"
node_modules/react-native/React/Views/RCTWKWebView.m:@interface RCTWKWebView () <WKUIDelegate, WKNavigationDelegate, WKScriptMessageHandler, UIScrollViewDelegate, RCTAutoInsetsProtocol>
node_modules/react-native/React/Views/RCTWKWebView.m:@property (nonatomic, copy) WKWebView *webView;
node_modules/react-native/React/Views/RCTWKWebView.m:@implementation RCTWKWebView
node_modules/react-native/React/Views/RCTWKWebView.m:    WKWebViewConfiguration *wkWebViewConfig = [WKWebViewConfiguration new];
node_modules/react-native/React/Views/RCTWKWebView.m:    wkWebViewConfig.userContentController = [WKUserContentController new];
node_modules/react-native/React/Views/RCTWKWebView.m:    [wkWebViewConfig.userContentController addScriptMessageHandler: self name: MessageHanderName];
node_modules/react-native/React/Views/RCTWKWebView.m:    wkWebViewConfig.allowsInlineMediaPlayback = _allowsInlineMediaPlayback;
node_modules/react-native/React/Views/RCTWKWebView.m:    wkWebViewConfig.mediaTypesRequiringUserActionForPlayback = _mediaPlaybackRequiresUserAction
node_modules/react-native/React/Views/RCTWKWebView.m:   wkWebViewConfig.dataDetectorTypes = _dataDetectorTypes;
node_modules/react-native/React/Views/RCTWKWebView.m:    _webView = [[WKWebView alloc] initWithFrame:self.bounds configuration: wkWebViewConfig];
node_modules/react-native/React/Views/RCTWKWebView.m:  // Ensure webview takes the position and dimensions of RCTWKWebView
node_modules/react-native/React/Views/RCTWKWebView.m:- (void)                  webView:(WKWebView *)webView
node_modules/react-native/React/Views/RCTWKWebView.m:- (void)               webView:(WKWebView *)webView
node_modules/react-native/React/Views/RCTWKWebView.m:      // a new URL in the WebView before the previous one came back. We can just
node_modules/react-native/React/Views/RCTWKWebView.m:- (void)                    webView:(WKWebView *)webView
node_modules/react-native/React/Views/RCTWKWebView.m:- (void)      webView:(WKWebView *)webView
node_modules/react-native/React/Views/RCTWKWebView.m:        RCTLogError(@"Setting onMessage on a WebView overrides existing values of window.postMessage, but a previous value was defined");
node_modules/react-native/React/Views/RCTWKWebViewManager.m:#import "RCTWKWebViewManager.h"
node_modules/react-native/React/Views/RCTWKWebViewManager.m:#import "RCTWKWebView.h"
node_modules/react-native/React/Views/RCTWKWebViewManager.m:@interface RCTWKWebViewManager () <RCTWKWebViewDelegate>
node_modules/react-native/React/Views/RCTWKWebViewManager.m:@implementation RCTWKWebViewManager
node_modules/react-native/React/Views/RCTWKWebViewManager.m:  RCTWKWebView *webView = [RCTWKWebView new];
node_modules/react-native/React/Views/RCTWKWebViewManager.m:  [self.bridge.uiManager addUIBlock:^(__unused RCTUIManager *uiManager, NSDictionary<NSNumber *, RCTWKWebView *> *viewRegistry) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:    RCTWKWebView *view = viewRegistry[reactTag];
node_modules/react-native/React/Views/RCTWKWebViewManager.m:    if (![view isKindOfClass:[RCTWKWebView class]]) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:      RCTLogError(@"Invalid view returned from registry, expecting RCTWebView, got: %@", view);
node_modules/react-native/React/Views/RCTWKWebViewManager.m:RCT_CUSTOM_VIEW_PROPERTY(bounces, BOOL, RCTWKWebView) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:RCT_CUSTOM_VIEW_PROPERTY(scrollEnabled, BOOL, RCTWKWebView) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:RCT_CUSTOM_VIEW_PROPERTY(decelerationRate, CGFloat, RCTWKWebView) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:  [self.bridge.uiManager addUIBlock:^(__unused RCTUIManager *uiManager, NSDictionary<NSNumber *, RCTWKWebView *> *viewRegistry) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:    RCTWKWebView *view = viewRegistry[reactTag];
node_modules/react-native/React/Views/RCTWKWebViewManager.m:    if (![view isKindOfClass:[RCTWKWebView class]]) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:      RCTLogError(@"Invalid view returned from registry, expecting RCTWebView, got: %@", view);
node_modules/react-native/React/Views/RCTWKWebViewManager.m:  [self.bridge.uiManager addUIBlock:^(__unused RCTUIManager *uiManager, NSDictionary<NSNumber *, RCTWKWebView *> *viewRegistry) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:    RCTWKWebView *view = viewRegistry[reactTag];
node_modules/react-native/React/Views/RCTWKWebViewManager.m:    if (![view isKindOfClass:[RCTWKWebView class]]) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:      RCTLogError(@"Invalid view returned from registry, expecting RCTWebView, got: %@", view);
node_modules/react-native/React/Views/RCTWKWebViewManager.m:  [self.bridge.uiManager addUIBlock:^(__unused RCTUIManager *uiManager, NSDictionary<NSNumber *, RCTWKWebView *> *viewRegistry) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:    RCTWKWebView *view = viewRegistry[reactTag];
node_modules/react-native/React/Views/RCTWKWebViewManager.m:    if (![view isKindOfClass:[RCTWKWebView class]]) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:      RCTLogError(@"Invalid view returned from registry, expecting RCTWebView, got: %@", view);
node_modules/react-native/React/Views/RCTWKWebViewManager.m:  [self.bridge.uiManager addUIBlock:^(__unused RCTUIManager *uiManager, NSDictionary<NSNumber *, RCTWKWebView *> *viewRegistry) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:    RCTWKWebView *view = viewRegistry[reactTag];
node_modules/react-native/React/Views/RCTWKWebViewManager.m:    if (![view isKindOfClass:[RCTWKWebView class]]) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:      RCTLogError(@"Invalid view returned from registry, expecting RCTWebView, got: %@", view);
node_modules/react-native/React/Views/RCTWKWebViewManager.m:  [self.bridge.uiManager addUIBlock:^(__unused RCTUIManager *uiManager, NSDictionary<NSNumber *, RCTWKWebView *> *viewRegistry) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:    RCTWKWebView *view = viewRegistry[reactTag];
node_modules/react-native/React/Views/RCTWKWebViewManager.m:    if (![view isKindOfClass:[RCTWKWebView class]]) {
node_modules/react-native/React/Views/RCTWKWebViewManager.m:      RCTLogError(@"Invalid view returned from registry, expecting RCTWebView, got: %@", view);
node_modules/react-native/React/Views/RCTWKWebViewManager.m:- (BOOL)          webView:(RCTWKWebView *)webView
node_modules/react-native/React/Views/RCTWebViewManager.m:#import "RCTWebViewManager.h"
node_modules/react-native/React/Views/RCTWebViewManager.m:#import "RCTWebView.h"
node_modules/react-native/React/Views/RCTWebViewManager.m:@interface RCTWebViewManager () <RCTWebViewDelegate>
node_modules/react-native/React/Views/RCTWebViewManager.m:@implementation RCTWebViewManager
node_modules/react-native/React/Views/RCTWebViewManager.m:  RCTWebView *webView = [RCTWebView new];
node_modules/react-native/React/Views/RCTWebViewManager.m:  [self.bridge.uiManager addUIBlock:^(__unused RCTUIManager *uiManager, NSDictionary<NSNumber *, RCTWebView *> *viewRegistry) {
node_modules/react-native/React/Views/RCTWebViewManager.m:    RCTWebView *view = viewRegistry[reactTag];
node_modules/react-native/React/Views/RCTWebViewManager.m:    if (![view isKindOfClass:[RCTWebView class]]) {
node_modules/react-native/React/Views/RCTWebViewManager.m:      RCTLogError(@"Invalid view returned from registry, expecting RCTWebView, got: %@", view);
node_modules/react-native/React/Views/RCTWebViewManager.m:  [self.bridge.uiManager addUIBlock:^(__unused RCTUIManager *uiManager, NSDictionary<NSNumber *, RCTWebView *> *viewRegistry) {
node_modules/react-native/React/Views/RCTWebViewManager.m:    RCTWebView *view = viewRegistry[reactTag];
node_modules/react-native/React/Views/RCTWebViewManager.m:    if (![view isKindOfClass:[RCTWebView class]]) {
node_modules/react-native/React/Views/RCTWebViewManager.m:      RCTLogError(@"Invalid view returned from registry, expecting RCTWebView, got: %@", view);
node_modules/react-native/React/Views/RCTWebViewManager.m:  [self.bridge.uiManager addUIBlock:^(__unused RCTUIManager *uiManager, NSDictionary<NSNumber *, RCTWebView *> *viewRegistry) {
node_modules/react-native/React/Views/RCTWebViewManager.m:    RCTWebView *view = viewRegistry[reactTag];
node_modules/react-native/React/Views/RCTWebViewManager.m:    if (![view isKindOfClass:[RCTWebView class]]) {
node_modules/react-native/React/Views/RCTWebViewManager.m:      RCTLogError(@"Invalid view returned from registry, expecting RCTWebView, got: %@", view);
node_modules/react-native/React/Views/RCTWebViewManager.m:  [self.bridge.uiManager addUIBlock:^(__unused RCTUIManager *uiManager, NSDictionary<NSNumber *, RCTWebView *> *viewRegistry) {
node_modules/react-native/React/Views/RCTWebViewManager.m:    RCTWebView *view = viewRegistry[reactTag];
node_modules/react-native/React/Views/RCTWebViewManager.m:    if (![view isKindOfClass:[RCTWebView class]]) {
node_modules/react-native/React/Views/RCTWebViewManager.m:      RCTLogError(@"Invalid view returned from registry, expecting RCTWebView, got: %@", view);
node_modules/react-native/React/Views/RCTWebViewManager.m:  [self.bridge.uiManager addUIBlock:^(__unused RCTUIManager *uiManager, NSDictionary<NSNumber *, RCTWebView *> *viewRegistry) {
node_modules/react-native/React/Views/RCTWebViewManager.m:    RCTWebView *view = viewRegistry[reactTag];
node_modules/react-native/React/Views/RCTWebViewManager.m:    if (![view isKindOfClass:[RCTWebView class]]) {
node_modules/react-native/React/Views/RCTWebViewManager.m:      RCTLogError(@"Invalid view returned from registry, expecting RCTWebView, got: %@", view);
node_modules/react-native/React/Views/RCTWebViewManager.m:  [self.bridge.uiManager addUIBlock:^(__unused RCTUIManager *uiManager, NSDictionary<NSNumber *, RCTWebView *> *viewRegistry) {
node_modules/react-native/React/Views/RCTWebViewManager.m:    RCTWebView *view = viewRegistry[reactTag];
node_modules/react-native/React/Views/RCTWebViewManager.m:    if (![view isKindOfClass:[RCTWebView class]]) {
node_modules/react-native/React/Views/RCTWebViewManager.m:      RCTLogError(@"Invalid view returned from registry, expecting RCTWebView, got: %@", view);
node_modules/react-native/React/Views/RCTWebViewManager.m:- (BOOL)webView:(__unused RCTWebView *)webView
node_modules/react-native/React/Views/RCTWKWebView.h:@class RCTWKWebView;
node_modules/react-native/React/Views/RCTWKWebView.h:@protocol RCTWKWebViewDelegate <NSObject>
node_modules/react-native/React/Views/RCTWKWebView.h:- (BOOL)webView:(RCTWKWebView *)webView
node_modules/react-native/React/Views/RCTWKWebView.h:@interface RCTWKWebView : RCTView
node_modules/react-native/React/Views/RCTWKWebView.h:@property (nonatomic, weak) id<RCTWKWebViewDelegate> delegate;
node_modules/react-native/React/Views/RCTWebView.m:#import "RCTWebView.h"
node_modules/react-native/React/Views/RCTWebView.m:@interface RCTWebView () <UIWebViewDelegate, RCTAutoInsetsProtocol>
node_modules/react-native/React/Views/RCTWebView.m:@implementation RCTWebView
node_modules/react-native/React/Views/RCTWebView.m:  UIWebView *_webView;
node_modules/react-native/React/Views/RCTWebView.m:    _webView = [[UIWebView alloc] initWithFrame:self.bounds];
node_modules/react-native/React/Views/RCTWebView.m:#pragma mark - UIWebViewDelegate methods
node_modules/react-native/React/Views/RCTWebView.m:- (BOOL)webView:(__unused UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest *)request
node_modules/react-native/React/Views/RCTWebView.m: navigationType:(UIWebViewNavigationType)navigationType
node_modules/react-native/React/Views/RCTWebView.m:      @(UIWebViewNavigationTypeLinkClicked): @"click",
node_modules/react-native/React/Views/RCTWebView.m:      @(UIWebViewNavigationTypeFormSubmitted): @"formsubmit",
node_modules/react-native/React/Views/RCTWebView.m:      @(UIWebViewNavigationTypeBackForward): @"backforward",
node_modules/react-native/React/Views/RCTWebView.m:      @(UIWebViewNavigationTypeReload): @"reload",
node_modules/react-native/React/Views/RCTWebView.m:      @(UIWebViewNavigationTypeFormResubmitted): @"formresubmit",
node_modules/react-native/React/Views/RCTWebView.m:      @(UIWebViewNavigationTypeOther): @"other",
node_modules/react-native/React/Views/RCTWebView.m:- (void)webView:(__unused UIWebView *)webView didFailLoadWithError:(NSError *)error
node_modules/react-native/React/Views/RCTWebView.m:      // a new URL in the WebView before the previous one came back. We can just
node_modules/react-native/React/Views/RCTWebView.m:      // Error code 102 "Frame load interrupted" is raised by the UIWebView if
node_modules/react-native/React/Views/RCTWebView.m:      // implementing OAuth with a WebView.
node_modules/react-native/React/Views/RCTWebView.m:- (void)webViewDidFinishLoad:(UIWebView *)webView
node_modules/react-native/React/Views/RCTWebView.m:      RCTLogError(@"Setting onMessage on a WebView overrides existing values of window.postMessage, but a previous value was defined");
node_modules/react-native/React/Views/RCTWKWebViewManager.h:@interface RCTWKWebViewManager : RCTViewManager
node_modules/react-native-dropdown/example/Example2/android/app/proguard-rules.pro:# If your project uses WebView with JS, uncomment the following
node_modules/react-native-fbsdk/js/FBShareDialog.js:   * Displays the dialog in a UIWebView within the app.
node_modules/react-native-fbsdk/js/FBLoginManager.js:  // Attempts log in through a modal UIWebView pop-up.
node_modules/react-native-fbsdk/android/proguard-rules.pro:# If your project uses WebView with JS, uncomment the following
Binary file node_modules/react-native-preference/android/build/intermediates/exploded-aar/com.facebook.react/react-native/0.44.1/jars/classes.jar matches
node_modules/react-native-preference/.idea/markdown-navigator.xml:        <provider providerId="com.vladsch.idea.multimarkdown.editor.javafx.html.panel" providerName="JavaFX WebView" />
node_modules/react-native-qrcode/lib/Canvas.js:    WebView,
node_modules/react-native-qrcode/lib/Canvas.js:                <WebView
node_modules/react-native-view-shot/README.md:| WebView            | YES                | YES<sup>1</sup>   | YES               |
node_modules/tipsi-stripe/stripe.txt:                <android.webkit.WebView index="0" text="" class="android.webkit.WebView" package="com.android.browser" content-desc="" checkable="false" checked="false" clickable="false" enabled="true" focusable="false" focused="false" scrollable="false" long-clickable="false" password="false" selected="false" bounds="[0,203][1080,1794]" resource-id="" instance="0">
node_modules/tipsi-stripe/stripe.txt:                  <android.webkit.WebView index="0" text="" class="android.webkit.WebView" package="com.android.browser" content-desc="Stripe payment test page" checkable="false" checked="false" clickable="false" enabled="true" focusable="true" focused="true" scrollable="true" long-clickable="false" password="false" selected="false" bounds="[0,203][1080,1794]" resource-id="" instance="1">
node_modules/tipsi-stripe/stripe.txt:                  </android.webkit.WebView>
node_modules/tipsi-stripe/stripe.txt:                </android.webkit.WebView>
node_modules/ua-parser-js/test/browser-test.json:        "desc"    : "Chrome WebView",
node_modules/ua-parser-js/test/browser-test.json:            "name"    : "Chrome WebView",
node_modules/ua-parser-js/test/browser-test.json:        "ua"      : "Mozilla/5.0 (iPhone; CPU iPhone OS 10_0_2 like Mac OS X) AppleWebKit/602.1.50 (KHTML, like Gecko) Mobile/14A456 QQ/6.5.3.410 V1_IPH_SQ_6.5.3_1_APP_A Pixel/1080 Core/UIWebView NetType/WIFI Mem/26",
node_modules/ua-parser-js/dist/ua-parser.pack.js:!function(r,u){"use strict";var c="function",i="undefined",m="object",s="model",e="name",o="type",n="vendor",a="version",d="architecture",t="console",l="mobile",w="tablet",b="smarttv",p="wearable",f={extend:function(i,s){var e={};for(var o in i)s[o]&&s[o].length%2==0?e[o]=s[o].concat(i[o]):e[o]=i[o];return e},has:function(i,s){return"string"==typeof i&&-1!==s.toLowerCase().indexOf(i.toLowerCase())},lowerize:function(i){return i.toLowerCase()},major:function(i){return"string"==typeof i?i.replace(/[^\d\.]/g,"").split(".")[0]:u},trim:function(i){return i.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}},g={rgx:function(i,s){for(var e,o,r,n,a,d,t=0;t<s.length&&!a;){var l=s[t],w=s[t+1];for(e=o=0;e<l.length&&!a;)if(a=l[e++].exec(i))for(r=0;r<w.length;r++)d=a[++o],typeof(n=w[r])==m&&0<n.length?2==n.length?typeof n[1]==c?this[n[0]]=n[1].call(this,d):this[n[0]]=n[1]:3==n.length?typeof n[1]!=c||n[1].exec&&n[1].test?this[n[0]]=d?d.replace(n[1],n[2]):u:this[n[0]]=d?n[1].call(this,d,n[2]):u:4==n.length&&(this[n[0]]=d?n[3].call(this,d.replace(n[1],n[2])):u):this[n]=d||u;t+=2}},str:function(i,s){for(var e in s)if(typeof s[e]==m&&0<s[e].length){for(var o=0;o<s[e].length;o++)if(f.has(s[e][o],i))return"?"===e?u:e}else if(f.has(s[e],i))return"?"===e?u:e;return i}},h={browser:{oldsafari:{version:{"1.0":"/8",1.2:"/1",1.3:"/3","2.0":"/412","2.0.2":"/416","2.0.3":"/417","2.0.4":"/419","?":"/"}}},device:{amazon:{model:{"Fire Phone":["SD","KF"]}},sprint:{model:{"Evo Shift 4G":"7373KT"},vendor:{HTC:"APA",Sprint:"Sprint"}}},os:{windows:{version:{ME:"4.90","NT 3.11":"NT3.51","NT 4.0":"NT4.0",2e3:"NT 5.0",XP:["NT 5.1","NT 5.2"],Vista:"NT 6.0",7:"NT 6.1",8:"NT 6.2",8.1:"NT 6.3",10:["NT 6.4","NT 10.0"],RT:"ARM"}}}},v={browser:[[/(opera\smini)\/([\w\.-]+)/i,/(opera\s[mobiletab]+).+version\/([\w\.-]+)/i,/(opera).+version\/([\w\.]+)/i,/(opera)[\/\s]+([\w\.]+)/i],[e,a],[/(opios)[\/\s]+([\w\.]+)/i],[[e,"Opera Mini"],a],[/\s(opr)\/([\w\.]+)/i],[[e,"Opera"],a],[/(kindle)\/([\w\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]*)/i,/(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i,/(?:ms|\()(ie)\s([\w\.]+)/i,/(rekonq)\/([\w\.]*)/i,/(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\/([\w\.-]+)/i],[e,a],[/(konqueror)\/([\w\.]+)/i],[[e,"Konqueror"],a],[/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i],[[e,"IE"],a],[/(edge|edgios|edga|edg)\/((\d+)?[\w\.]+)/i],[[e,"Edge"],a],[/(yabrowser)\/([\w\.]+)/i],[[e,"Yandex"],a],[/(puffin)\/([\w\.]+)/i],[[e,"Puffin"],a],[/(focus)\/([\w\.]+)/i],[[e,"Firefox Focus"],a],[/(opt)\/([\w\.]+)/i],[[e,"Opera Touch"],a],[/((?:[\s\/])uc?\s?browser|(?:juc.+)ucweb)[\/\s]?([\w\.]+)/i],[[e,"UCBrowser"],a],[/(comodo_dragon)\/([\w\.]+)/i],[[e,/_/g," "],a],[/(windowswechat qbcore)\/([\w\.]+)/i],[[e,"WeChat(Win) Desktop"],a],[/(micromessenger)\/([\w\.]+)/i],[[e,"WeChat"],a],[/(brave)\/([\w\.]+)/i],[[e,"Brave"],a],[/(qqbrowserlite)\/([\w\.]+)/i],[e,a],[/(QQ)\/([\d\.]+)/i],[e,a],[/m?(qqbrowser)[\/\s]?([\w\.]+)/i],[e,a],[/(BIDUBrowser)[\/\s]?([\w\.]+)/i],[e,a],[/(2345Explorer)[\/\s]?([\w\.]+)/i],[e,a],[/(MetaSr)[\/\s]?([\w\.]+)/i],[e],[/(LBBROWSER)/i],[e],[/xiaomi\/miuibrowser\/([\w\.]+)/i],[a,[e,"MIUI Browser"]],[/;fbav\/([\w\.]+);/i],[a,[e,"Facebook"]],[/safari\s(line)\/([\w\.]+)/i,/android.+(line)\/([\w\.]+)\/iab/i],[e,a],[/headlesschrome(?:\/([\w\.]+)|\s)/i],[a,[e,"Chrome Headless"]],[/\swv\).+(chrome)\/([\w\.]+)/i],[[e,/(.+)/,"$1 WebView"],a],[/((?:oculus|samsung)browser)\/([\w\.]+)/i],[[e,/(.+(?:g|us))(.+)/,"$1 $2"],a],[/android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*/i],[a,[e,"Android Browser"]],[/(sailfishbrowser)\/([\w\.]+)/i],[[e,"Sailfish Browser"],a],[/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i],[e,a],[/(dolfin)\/([\w\.]+)/i],[[e,"Dolphin"],a],[/((?:android.+)crmo|crios)\/([\w\.]+)/i],[[e,"Chrome"],a],[/(coast)\/([\w\.]+)/i],[[e,"Opera Coast"],a],[/fxios\/([\w\.-]+)/i],[a,[e,"Firefox"]],[/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i],[a,[e,"Mobile Safari"]],[/version\/([\w\.]+).+?(mobile\s?safari|safari)/i],[a,e],[/webkit.+?(gsa)\/([\w\.]+).+?(mobile\s?safari|safari)(\/[\w\.]+)/i],[[e,"GSA"],a],[/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i],[e,[a,g.str,h.browser.oldsafari.version]],[/(webkit|khtml)\/([\w\.]+)/i],[e,a],[/(navigator|netscape)\/([\w\.-]+)/i],[[e,"Netscape"],a],[/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i,/(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([\w\.-]+)$/i,/(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i,/(links)\s\(([\w\.]+)/i,/(gobrowser)\/?([\w\.]*)/i,/(ice\s?browser)\/v?([\w\._]+)/i,/(mosaic)[\/\s]([\w\.]+)/i],[e,a]],cpu:[[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i],[[d,"amd64"]],[/(ia32(?=;))/i],[[d,f.lowerize]],[/((?:i[346]|x)86)[;\)]/i],[[d,"ia32"]],[/windows\s(ce|mobile);\sppc;/i],[[d,"arm"]],[/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i],[[d,/ower/,"",f.lowerize]],[/(sun4\w)[;\)]/i],[[d,"sparc"]],[/((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+[;l]))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i],[[d,f.lowerize]]],device:[[/\((ipad|playbook);[\w\s\),;-]+(rim|apple)/i],[s,n,[o,w]],[/applecoremedia\/[\w\.]+ \((ipad)/],[s,[n,"Apple"],[o,w]],[/(apple\s{0,1}tv)/i],[[s,"Apple TV"],[n,"Apple"]],[/(archos)\s(gamepad2?)/i,/(hp).+(touchpad)/i,/(hp).+(tablet)/i,/(kindle)\/([\w\.]+)/i,/\s(nook)[\w\s]+build\/(\w+)/i,/(dell)\s(strea[kpr\s\d]*[\dko])/i],[n,s,[o,w]],[/(kf[A-z]+)\sbuild\/.+silk\//i],[s,[n,"Amazon"],[o,w]],[/(sd|kf)[0349hijorstuw]+\sbuild\/.+silk\//i],[[s,g.str,h.device.amazon.model],[n,"Amazon"],[o,l]],[/android.+aft([bms])\sbuild/i],[s,[n,"Amazon"],[o,b]],[/\((ip[honed|\s\w*]+);.+(apple)/i],[s,n,[o,l]],[/\((ip[honed|\s\w*]+);/i],[s,[n,"Apple"],[o,l]],[/(blackberry)[\s-]?(\w+)/i,/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\s_-]?([\w-]*)/i,/(hp)\s([\w\s]+\w)/i,/(asus)-?(\w+)/i],[n,s,[o,l]],[/\(bb10;\s(\w+)/i],[s,[n,"BlackBerry"],[o,l]],[/android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone|p00c)/i],[s,[n,"Asus"],[o,w]],[/(sony)\s(tablet\s[ps])\sbuild\//i,/(sony)?(?:sgp.+)\sbuild\//i],[[n,"Sony"],[s,"Xperia Tablet"],[o,w]],[/android.+\s([c-g]\d{4}|so[-l]\w+)(?=\sbuild\/|\).+chrome\/(?![1-6]{0,1}\d\.))/i],[s,[n,"Sony"],[o,l]],[/\s(ouya)\s/i,/(nintendo)\s([wids3u]+)/i],[n,s,[o,t]],[/android.+;\s(shield)\sbuild/i],[s,[n,"Nvidia"],[o,t]],[/(playstation\s[34portablevi]+)/i],[s,[n,"Sony"],[o,t]],[/(sprint\s(\w+))/i],[[n,g.str,h.device.sprint.vendor],[s,g.str,h.device.sprint.model],[o,l]],[/(htc)[;_\s-]+([\w\s]+(?=\)|\sbuild)|\w+)/i,/(zte)-(\w*)/i,/(alcatel|geeksphone|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]*)/i],[n,[s,/_/g," "],[o,l]],[/(nexus\s9)/i],[s,[n,"HTC"],[o,w]],[/d\/huawei([\w\s-]+)[;\)]/i,/(nexus\s6p)/i],[s,[n,"Huawei"],[o,l]],[/(microsoft);\s(lumia[\s\w]+)/i],[n,s,[o,l]],[/[\s\(;](xbox(?:\sone)?)[\s\);]/i],[s,[n,"Microsoft"],[o,t]],[/(kin\.[onetw]{3})/i],[[s,/\./g," "],[n,"Microsoft"],[o,l]],[/\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?:?(\s4g)?)[\w\s]+build\//i,/mot[\s-]?(\w*)/i,/(XT\d{3,4}) build\//i,/(nexus\s6)/i],[s,[n,"Motorola"],[o,l]],[/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i],[s,[n,"Motorola"],[o,w]],[/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i],[[n,f.trim],[s,f.trim],[o,b]],[/hbbtv.+maple;(\d+)/i],[[s,/^/,"SmartTV"],[n,"Samsung"],[o,b]],[/\(dtv[\);].+(aquos)/i],[s,[n,"Sharp"],[o,b]],[/android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))/i,/((SM-T\w+))/i],[[n,"Samsung"],s,[o,w]],[/smart-tv.+(samsung)/i],[n,[o,b],s],[/((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))/i,/(sam[sung]*)[\s-]*(\w+-?[\w-]*)/i,/sec-((sgh\w+))/i],[[n,"Samsung"],s,[o,l]],[/sie-(\w*)/i],[s,[n,"Siemens"],[o,l]],[/(maemo|nokia).*(n900|lumia\s\d+)/i,/(nokia)[\s_-]?([\w-]*)/i],[[n,"Nokia"],s,[o,l]],[/android[x\d\.\s;]+\s([ab][1-7]\-?[0178a]\d\d?)/i],[s,[n,"Acer"],[o,w]],[/android.+([vl]k\-?\d{3})\s+build/i],[s,[n,"LG"],[o,w]],[/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i],[[n,"LG"],s,[o,w]],[/(lg) netcast\.tv/i],[n,s,[o,b]],[/(nexus\s[45])/i,/lg[e;\s\/-]+(\w*)/i,/android.+lg(\-?[\d\w]+)\s+build/i],[s,[n,"LG"],[o,l]],[/(lenovo)\s?(s(?:5000|6000)(?:[\w-]+)|tab(?:[\s\w]+))/i],[n,s,[o,w]],[/android.+(ideatab[a-z0-9\-\s]+)/i],[s,[n,"Lenovo"],[o,w]],[/(lenovo)[_\s-]?([\w-]+)/i],[n,s,[o,l]],[/linux;.+((jolla));/i],[n,s,[o,l]],[/((pebble))app\/[\d\.]+\s/i],[n,s,[o,p]],[/android.+;\s(oppo)\s?([\w\s]+)\sbuild/i],[n,s,[o,l]],[/crkey/i],[[s,"Chromecast"],[n,"Google"]],[/android.+;\s(glass)\s\d/i],[s,[n,"Google"],[o,p]],[/android.+;\s(pixel c)[\s)]/i],[s,[n,"Google"],[o,w]],[/android.+;\s(pixel( [23])?( xl)?)[\s)]/i],[s,[n,"Google"],[o,l]],[/android.+;\s(\w+)\s+build\/hm\1/i,/android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i,/android.+(mi[\s\-_]*(?:a\d|one|one[\s_]plus|note lte)?[\s_]*(?:\d?\w?)[\s_]*(?:plus)?)\s+build/i,/android.+(redmi[\s\-_]*(?:note)?(?:[\s_]*[\w\s]+))\s+build/i],[[s,/_/g," "],[n,"Xiaomi"],[o,l]],[/android.+(mi[\s\-_]*(?:pad)(?:[\s_]*[\w\s]+))\s+build/i],[[s,/_/g," "],[n,"Xiaomi"],[o,w]],[/android.+;\s(m[1-5]\snote)\sbuild/i],[s,[n,"Meizu"],[o,l]],[/(mz)-([\w-]{2,})/i],[[n,"Meizu"],s,[o,l]],[/android.+a000(1)\s+build/i,/android.+oneplus\s(a\d{4})\s+build/i],[s,[n,"OnePlus"],[o,l]],[/android.+[;\/]\s*(RCT[\d\w]+)\s+build/i],[s,[n,"RCA"],[o,w]],[/android.+[;\/\s]+(Venue[\d\s]{2,7})\s+build/i],[s,[n,"Dell"],[o,w]],[/android.+[;\/]\s*(Q[T|M][\d\w]+)\s+build/i],[s,[n,"Verizon"],[o,w]],[/android.+[;\/]\s+(Barnes[&\s]+Noble\s+|BN[RT])(V?.*)\s+build/i],[[n,"Barnes & Noble"],s,[o,w]],[/android.+[;\/]\s+(TM\d{3}.*\b)\s+build/i],[s,[n,"NuVision"],[o,w]],[/android.+;\s(k88)\sbuild/i],[s,[n,"ZTE"],[o,w]],[/android.+[;\/]\s*(gen\d{3})\s+build.*49h/i],[s,[n,"Swiss"],[o,l]],[/android.+[;\/]\s*(zur\d{3})\s+build/i],[s,[n,"Swiss"],[o,w]],[/android.+[;\/]\s*((Zeki)?TB.*\b)\s+build/i],[s,[n,"Zeki"],[o,w]],[/(android).+[;\/]\s+([YR]\d{2})\s+build/i,/android.+[;\/]\s+(Dragon[\-\s]+Touch\s+|DT)(\w{5})\sbuild/i],[[n,"Dragon Touch"],s,[o,w]],[/android.+[;\/]\s*(NS-?\w{0,9})\sbuild/i],[s,[n,"Insignia"],[o,w]],[/android.+[;\/]\s*((NX|Next)-?\w{0,9})\s+build/i],[s,[n,"NextBook"],[o,w]],[/android.+[;\/]\s*(Xtreme\_)?(V(1[045]|2[015]|30|40|60|7[05]|90))\s+build/i],[[n,"Voice"],s,[o,l]],[/android.+[;\/]\s*(LVTEL\-)?(V1[12])\s+build/i],[[n,"LvTel"],s,[o,l]],[/android.+;\s(PH-1)\s/i],[s,[n,"Essential"],[o,l]],[/android.+[;\/]\s*(V(100MD|700NA|7011|917G).*\b)\s+build/i],[s,[n,"Envizen"],[o,w]],[/android.+[;\/]\s*(Le[\s\-]+Pan)[\s\-]+(\w{1,9})\s+build/i],[n,s,[o,w]],[/android.+[;\/]\s*(Trio[\s\-]*.*)\s+build/i],[s,[n,"MachSpeed"],[o,w]],[/android.+[;\/]\s*(Trinity)[\-\s]*(T\d{3})\s+build/i],[n,s,[o,w]],[/android.+[;\/]\s*TU_(1491)\s+build/i],[s,[n,"Rotor"],[o,w]],[/android.+(KS(.+))\s+build/i],[s,[n,"Amazon"],[o,w]],[/android.+(Gigaset)[\s\-]+(Q\w{1,9})\s+build/i],[n,s,[o,w]],[/\s(tablet|tab)[;\/]/i,/\s(mobile)(?:[;\/]|\ssafari)/i],[[o,f.lowerize],n,s],[/[\s\/\(](smart-?tv)[;\)]/i],[[o,b]],[/(android[\w\.\s\-]{0,9});.+build/i],[s,[n,"Generic"]]],engine:[[/windows.+\sedge\/([\w\.]+)/i],[a,[e,"EdgeHTML"]],[/webkit\/537\.36.+chrome\/(?!27)/i],[[e,"Blink"]],[/(presto)\/([\w\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i,/(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i,/(icab)[\/\s]([23]\.[\d\.]+)/i],[e,a],[/rv\:([\w\.]{1,9}).+(gecko)/i],[a,e]],os:[[/microsoft\s(windows)\s(vista|xp)/i],[e,a],[/(windows)\snt\s6\.2;\s(arm)/i,/(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s\w]*)/i,/(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i],[e,[a,g.str,h.os.windows.version]],[/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i],[[e,"Windows"],[a,g.str,h.os.windows.version]],[/\((bb)(10);/i],[[e,"BlackBerry"],a],[/(blackberry)\w*\/?([\w\.]*)/i,/(tizen)[\/\s]([\w\.]+)/i,/(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|sailfish|contiki)[\/\s-]?([\w\.]*)/i],[e,a],[/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]*)/i],[[e,"Symbian"],a],[/\((series40);/i],[e],[/mozilla.+\(mobile;.+gecko.+firefox/i],[[e,"Firefox OS"],a],[/(nintendo|playstation)\s([wids34portablevu]+)/i,/(mint)[\/\s\(]?(\w*)/i,/(mageia|vectorlinux)[;\s]/i,/(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]*)/i,/(hurd|linux)\s?([\w\.]*)/i,/(gnu)\s?([\w\.]*)/i],[e,a],[/(cros)\s[\w]+\s([\w\.]+\w)/i],[[e,"Chromium OS"],a],[/(sunos)\s?([\w\.\d]*)/i],[[e,"Solaris"],a],[/\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]*)/i],[e,a],[/(haiku)\s(\w+)/i],[e,a],[/cfnetwork\/.+darwin/i,/ip[honead]{2,4}(?:.*os\s([\w]+)\slike\smac|;\sopera)/i],[[a,/_/g,"."],[e,"iOS"]],[/(mac\sos\sx)\s?([\w\s\.]*)/i,/(macintosh|mac(?=_powerpc)\s)/i],[[e,"Mac OS"],[a,/_/g,"."]],[/((?:open)?solaris)[\/\s-]?([\w\.]*)/i,/(aix)\s((\d)(?=\.|\)|\s)[\w\.])*/i,/(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms|fuchsia)/i,/(unix)\s?([\w\.]*)/i],[e,a]]},x=function(i,s){if("object"==typeof i&&(s=i,i=u),!(this instanceof x))return new x(i,s).getResult();var e=i||(r&&r.navigator&&r.navigator.userAgent?r.navigator.userAgent:""),o=s?f.extend(v,s):v;return this.getBrowser=function(){var i={name:u,version:u};return g.rgx.call(i,e,o.browser),i.major=f.major(i.version),i},this.getCPU=function(){var i={architecture:u};return g.rgx.call(i,e,o.cpu),i},this.getDevice=function(){var i={vendor:u,model:u,type:u};return g.rgx.call(i,e,o.device),i},this.getEngine=function(){var i={name:u,version:u};return g.rgx.call(i,e,o.engine),i},this.getOS=function(){var i={name:u,version:u};return g.rgx.call(i,e,o.os),i},this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}},this.getUA=function(){return e},this.setUA=function(i){return e=i,this},this};x.VERSION="0.7.20",x.BROWSER={NAME:e,MAJOR:"major",VERSION:a},x.CPU={ARCHITECTURE:d},x.DEVICE={MODEL:s,VENDOR:n,TYPE:o,CONSOLE:t,MOBILE:l,SMARTTV:b,TABLET:w,WEARABLE:p,EMBEDDED:"embedded"},x.ENGINE={NAME:e,VERSION:a},x.OS={NAME:e,VERSION:a},typeof exports!=i?(typeof module!=i&&module.exports&&(exports=module.exports=x),exports.UAParser=x):"function"==typeof define&&define.amd?define(function(){return x}):r&&(r.UAParser=x);var k=r&&(r.jQuery||r.Zepto);if(typeof k!=i&&!k.ua){var y=new x;k.ua=y.getResult(),k.ua.get=function(){return y.getUA()},k.ua.set=function(i){y.setUA(i);var s=y.getResult();for(var e in s)k.ua[e]=s[e]}}}("object"==typeof window?window:this);
node_modules/ua-parser-js/dist/ua-parser.min.js:(function(window,undefined){"use strict";var LIBVERSION="0.7.20",EMPTY="",UNKNOWN="?",FUNC_TYPE="function",UNDEF_TYPE="undefined",OBJ_TYPE="object",STR_TYPE="string",MAJOR="major",MODEL="model",NAME="name",TYPE="type",VENDOR="vendor",VERSION="version",ARCHITECTURE="architecture",CONSOLE="console",MOBILE="mobile",TABLET="tablet",SMARTTV="smarttv",WEARABLE="wearable",EMBEDDED="embedded";var util={extend:function(regexes,extensions){var mergedRegexes={};for(var i in regexes){if(extensions[i]&&extensions[i].length%2===0){mergedRegexes[i]=extensions[i].concat(regexes[i])}else{mergedRegexes[i]=regexes[i]}}return mergedRegexes},has:function(str1,str2){if(typeof str1==="string"){return str2.toLowerCase().indexOf(str1.toLowerCase())!==-1}else{return false}},lowerize:function(str){return str.toLowerCase()},major:function(version){return typeof version===STR_TYPE?version.replace(/[^\d\.]/g,"").split(".")[0]:undefined},trim:function(str){return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"")}};var mapper={rgx:function(ua,arrays){var i=0,j,k,p,q,matches,match;while(i<arrays.length&&!matches){var regex=arrays[i],props=arrays[i+1];j=k=0;while(j<regex.length&&!matches){matches=regex[j++].exec(ua);if(!!matches){for(p=0;p<props.length;p++){match=matches[++k];q=props[p];if(typeof q===OBJ_TYPE&&q.length>0){if(q.length==2){if(typeof q[1]==FUNC_TYPE){this[q[0]]=q[1].call(this,match)}else{this[q[0]]=q[1]}}else if(q.length==3){if(typeof q[1]===FUNC_TYPE&&!(q[1].exec&&q[1].test)){this[q[0]]=match?q[1].call(this,match,q[2]):undefined}else{this[q[0]]=match?match.replace(q[1],q[2]):undefined}}else if(q.length==4){this[q[0]]=match?q[3].call(this,match.replace(q[1],q[2])):undefined}}else{this[q]=match?match:undefined}}}}i+=2}},str:function(str,map){for(var i in map){if(typeof map[i]===OBJ_TYPE&&map[i].length>0){for(var j=0;j<map[i].length;j++){if(util.has(map[i][j],str)){return i===UNKNOWN?undefined:i}}}else if(util.has(map[i],str)){return i===UNKNOWN?undefined:i}}return str}};var maps={browser:{oldsafari:{version:{"1.0":"/8",1.2:"/1",1.3:"/3","2.0":"/412","2.0.2":"/416","2.0.3":"/417","2.0.4":"/419","?":"/"}}},device:{amazon:{model:{"Fire Phone":["SD","KF"]}},sprint:{model:{"Evo Shift 4G":"7373KT"},vendor:{HTC:"APA",Sprint:"Sprint"}}},os:{windows:{version:{ME:"4.90","NT 3.11":"NT3.51","NT 4.0":"NT4.0",2e3:"NT 5.0",XP:["NT 5.1","NT 5.2"],Vista:"NT 6.0",7:"NT 6.1",8:"NT 6.2",8.1:"NT 6.3",10:["NT 6.4","NT 10.0"],RT:"ARM"}}}};var regexes={browser:[[/(opera\smini)\/([\w\.-]+)/i,/(opera\s[mobiletab]+).+version\/([\w\.-]+)/i,/(opera).+version\/([\w\.]+)/i,/(opera)[\/\s]+([\w\.]+)/i],[NAME,VERSION],[/(opios)[\/\s]+([\w\.]+)/i],[[NAME,"Opera Mini"],VERSION],[/\s(opr)\/([\w\.]+)/i],[[NAME,"Opera"],VERSION],[/(kindle)\/([\w\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\/\s]?([\w\.]*)/i,/(avant\s|iemobile|slim|baidu)(?:browser)?[\/\s]?([\w\.]*)/i,/(?:ms|\()(ie)\s([\w\.]+)/i,/(rekonq)\/([\w\.]*)/i,/(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\/([\w\.-]+)/i],[NAME,VERSION],[/(konqueror)\/([\w\.]+)/i],[[NAME,"Konqueror"],VERSION],[/(trident).+rv[:\s]([\w\.]+).+like\sgecko/i],[[NAME,"IE"],VERSION],[/(edge|edgios|edga|edg)\/((\d+)?[\w\.]+)/i],[[NAME,"Edge"],VERSION],[/(yabrowser)\/([\w\.]+)/i],[[NAME,"Yandex"],VERSION],[/(puffin)\/([\w\.]+)/i],[[NAME,"Puffin"],VERSION],[/(focus)\/([\w\.]+)/i],[[NAME,"Firefox Focus"],VERSION],[/(opt)\/([\w\.]+)/i],[[NAME,"Opera Touch"],VERSION],[/((?:[\s\/])uc?\s?browser|(?:juc.+)ucweb)[\/\s]?([\w\.]+)/i],[[NAME,"UCBrowser"],VERSION],[/(comodo_dragon)\/([\w\.]+)/i],[[NAME,/_/g," "],VERSION],[/(windowswechat qbcore)\/([\w\.]+)/i],[[NAME,"WeChat(Win) Desktop"],VERSION],[/(micromessenger)\/([\w\.]+)/i],[[NAME,"WeChat"],VERSION],[/(brave)\/([\w\.]+)/i],[[NAME,"Brave"],VERSION],[/(qqbrowserlite)\/([\w\.]+)/i],[NAME,VERSION],[/(QQ)\/([\d\.]+)/i],[NAME,VERSION],[/m?(qqbrowser)[\/\s]?([\w\.]+)/i],[NAME,VERSION],[/(BIDUBrowser)[\/\s]?([\w\.]+)/i],[NAME,VERSION],[/(2345Explorer)[\/\s]?([\w\.]+)/i],[NAME,VERSION],[/(MetaSr)[\/\s]?([\w\.]+)/i],[NAME],[/(LBBROWSER)/i],[NAME],[/xiaomi\/miuibrowser\/([\w\.]+)/i],[VERSION,[NAME,"MIUI Browser"]],[/;fbav\/([\w\.]+);/i],[VERSION,[NAME,"Facebook"]],[/safari\s(line)\/([\w\.]+)/i,/android.+(line)\/([\w\.]+)\/iab/i],[NAME,VERSION],[/headlesschrome(?:\/([\w\.]+)|\s)/i],[VERSION,[NAME,"Chrome Headless"]],[/\swv\).+(chrome)\/([\w\.]+)/i],[[NAME,/(.+)/,"$1 WebView"],VERSION],[/((?:oculus|samsung)browser)\/([\w\.]+)/i],[[NAME,/(.+(?:g|us))(.+)/,"$1 $2"],VERSION],[/android.+version\/([\w\.]+)\s+(?:mobile\s?safari|safari)*/i],[VERSION,[NAME,"Android Browser"]],[/(sailfishbrowser)\/([\w\.]+)/i],[[NAME,"Sailfish Browser"],VERSION],[/(chrome|omniweb|arora|[tizenoka]{5}\s?browser)\/v?([\w\.]+)/i],[NAME,VERSION],[/(dolfin)\/([\w\.]+)/i],[[NAME,"Dolphin"],VERSION],[/((?:android.+)crmo|crios)\/([\w\.]+)/i],[[NAME,"Chrome"],VERSION],[/(coast)\/([\w\.]+)/i],[[NAME,"Opera Coast"],VERSION],[/fxios\/([\w\.-]+)/i],[VERSION,[NAME,"Firefox"]],[/version\/([\w\.]+).+?mobile\/\w+\s(safari)/i],[VERSION,[NAME,"Mobile Safari"]],[/version\/([\w\.]+).+?(mobile\s?safari|safari)/i],[VERSION,NAME],[/webkit.+?(gsa)\/([\w\.]+).+?(mobile\s?safari|safari)(\/[\w\.]+)/i],[[NAME,"GSA"],VERSION],[/webkit.+?(mobile\s?safari|safari)(\/[\w\.]+)/i],[NAME,[VERSION,mapper.str,maps.browser.oldsafari.version]],[/(webkit|khtml)\/([\w\.]+)/i],[NAME,VERSION],[/(navigator|netscape)\/([\w\.-]+)/i],[[NAME,"Netscape"],VERSION],[/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo\sbrowser|minimo|conkeror)[\/\s]?([\w\.\+]+)/i,/(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([\w\.-]+)$/i,/(mozilla)\/([\w\.]+).+rv\:.+gecko\/\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\/\s]?([\w\.]+)/i,/(links)\s\(([\w\.]+)/i,/(gobrowser)\/?([\w\.]*)/i,/(ice\s?browser)\/v?([\w\._]+)/i,/(mosaic)[\/\s]([\w\.]+)/i],[NAME,VERSION]],cpu:[[/(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\)]/i],[[ARCHITECTURE,"amd64"]],[/(ia32(?=;))/i],[[ARCHITECTURE,util.lowerize]],[/((?:i[346]|x)86)[;\)]/i],[[ARCHITECTURE,"ia32"]],[/windows\s(ce|mobile);\sppc;/i],[[ARCHITECTURE,"arm"]],[/((?:ppc|powerpc)(?:64)?)(?:\smac|;|\))/i],[[ARCHITECTURE,/ower/,"",util.lowerize]],[/(sun4\w)[;\)]/i],[[ARCHITECTURE,"sparc"]],[/((?:avr32|ia64(?=;))|68k(?=\))|arm(?:64|(?=v\d+[;l]))|(?=atmel\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i],[[ARCHITECTURE,util.lowerize]]],device:[[/\((ipad|playbook);[\w\s\),;-]+(rim|apple)/i],[MODEL,VENDOR,[TYPE,TABLET]],[/applecoremedia\/[\w\.]+ \((ipad)/],[MODEL,[VENDOR,"Apple"],[TYPE,TABLET]],[/(apple\s{0,1}tv)/i],[[MODEL,"Apple TV"],[VENDOR,"Apple"]],[/(archos)\s(gamepad2?)/i,/(hp).+(touchpad)/i,/(hp).+(tablet)/i,/(kindle)\/([\w\.]+)/i,/\s(nook)[\w\s]+build\/(\w+)/i,/(dell)\s(strea[kpr\s\d]*[\dko])/i],[VENDOR,MODEL,[TYPE,TABLET]],[/(kf[A-z]+)\sbuild\/.+silk\//i],[MODEL,[VENDOR,"Amazon"],[TYPE,TABLET]],[/(sd|kf)[0349hijorstuw]+\sbuild\/.+silk\//i],[[MODEL,mapper.str,maps.device.amazon.model],[VENDOR,"Amazon"],[TYPE,MOBILE]],[/android.+aft([bms])\sbuild/i],[MODEL,[VENDOR,"Amazon"],[TYPE,SMARTTV]],[/\((ip[honed|\s\w*]+);.+(apple)/i],[MODEL,VENDOR,[TYPE,MOBILE]],[/\((ip[honed|\s\w*]+);/i],[MODEL,[VENDOR,"Apple"],[TYPE,MOBILE]],[/(blackberry)[\s-]?(\w+)/i,/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\s_-]?([\w-]*)/i,/(hp)\s([\w\s]+\w)/i,/(asus)-?(\w+)/i],[VENDOR,MODEL,[TYPE,MOBILE]],[/\(bb10;\s(\w+)/i],[MODEL,[VENDOR,"BlackBerry"],[TYPE,MOBILE]],[/android.+(transfo[prime\s]{4,10}\s\w+|eeepc|slider\s\w+|nexus 7|padfone|p00c)/i],[MODEL,[VENDOR,"Asus"],[TYPE,TABLET]],[/(sony)\s(tablet\s[ps])\sbuild\//i,/(sony)?(?:sgp.+)\sbuild\//i],[[VENDOR,"Sony"],[MODEL,"Xperia Tablet"],[TYPE,TABLET]],[/android.+\s([c-g]\d{4}|so[-l]\w+)(?=\sbuild\/|\).+chrome\/(?![1-6]{0,1}\d\.))/i],[MODEL,[VENDOR,"Sony"],[TYPE,MOBILE]],[/\s(ouya)\s/i,/(nintendo)\s([wids3u]+)/i],[VENDOR,MODEL,[TYPE,CONSOLE]],[/android.+;\s(shield)\sbuild/i],[MODEL,[VENDOR,"Nvidia"],[TYPE,CONSOLE]],[/(playstation\s[34portablevi]+)/i],[MODEL,[VENDOR,"Sony"],[TYPE,CONSOLE]],[/(sprint\s(\w+))/i],[[VENDOR,mapper.str,maps.device.sprint.vendor],[MODEL,mapper.str,maps.device.sprint.model],[TYPE,MOBILE]],[/(htc)[;_\s-]+([\w\s]+(?=\)|\sbuild)|\w+)/i,/(zte)-(\w*)/i,/(alcatel|geeksphone|nexian|panasonic|(?=;\s)sony)[_\s-]?([\w-]*)/i],[VENDOR,[MODEL,/_/g," "],[TYPE,MOBILE]],[/(nexus\s9)/i],[MODEL,[VENDOR,"HTC"],[TYPE,TABLET]],[/d\/huawei([\w\s-]+)[;\)]/i,/(nexus\s6p)/i],[MODEL,[VENDOR,"Huawei"],[TYPE,MOBILE]],[/(microsoft);\s(lumia[\s\w]+)/i],[VENDOR,MODEL,[TYPE,MOBILE]],[/[\s\(;](xbox(?:\sone)?)[\s\);]/i],[MODEL,[VENDOR,"Microsoft"],[TYPE,CONSOLE]],[/(kin\.[onetw]{3})/i],[[MODEL,/\./g," "],[VENDOR,"Microsoft"],[TYPE,MOBILE]],[/\s(milestone|droid(?:[2-4x]|\s(?:bionic|x2|pro|razr))?:?(\s4g)?)[\w\s]+build\//i,/mot[\s-]?(\w*)/i,/(XT\d{3,4}) build\//i,/(nexus\s6)/i],[MODEL,[VENDOR,"Motorola"],[TYPE,MOBILE]],[/android.+\s(mz60\d|xoom[\s2]{0,2})\sbuild\//i],[MODEL,[VENDOR,"Motorola"],[TYPE,TABLET]],[/hbbtv\/\d+\.\d+\.\d+\s+\([\w\s]*;\s*(\w[^;]*);([^;]*)/i],[[VENDOR,util.trim],[MODEL,util.trim],[TYPE,SMARTTV]],[/hbbtv.+maple;(\d+)/i],[[MODEL,/^/,"SmartTV"],[VENDOR,"Samsung"],[TYPE,SMARTTV]],[/\(dtv[\);].+(aquos)/i],[MODEL,[VENDOR,"Sharp"],[TYPE,SMARTTV]],[/android.+((sch-i[89]0\d|shw-m380s|gt-p\d{4}|gt-n\d+|sgh-t8[56]9|nexus 10))/i,/((SM-T\w+))/i],[[VENDOR,"Samsung"],MODEL,[TYPE,TABLET]],[/smart-tv.+(samsung)/i],[VENDOR,[TYPE,SMARTTV],MODEL],[/((s[cgp]h-\w+|gt-\w+|galaxy\snexus|sm-\w[\w\d]+))/i,/(sam[sung]*)[\s-]*(\w+-?[\w-]*)/i,/sec-((sgh\w+))/i],[[VENDOR,"Samsung"],MODEL,[TYPE,MOBILE]],[/sie-(\w*)/i],[MODEL,[VENDOR,"Siemens"],[TYPE,MOBILE]],[/(maemo|nokia).*(n900|lumia\s\d+)/i,/(nokia)[\s_-]?([\w-]*)/i],[[VENDOR,"Nokia"],MODEL,[TYPE,MOBILE]],[/android[x\d\.\s;]+\s([ab][1-7]\-?[0178a]\d\d?)/i],[MODEL,[VENDOR,"Acer"],[TYPE,TABLET]],[/android.+([vl]k\-?\d{3})\s+build/i],[MODEL,[VENDOR,"LG"],[TYPE,TABLET]],[/android\s3\.[\s\w;-]{10}(lg?)-([06cv9]{3,4})/i],[[VENDOR,"LG"],MODEL,[TYPE,TABLET]],[/(lg) netcast\.tv/i],[VENDOR,MODEL,[TYPE,SMARTTV]],[/(nexus\s[45])/i,/lg[e;\s\/-]+(\w*)/i,/android.+lg(\-?[\d\w]+)\s+build/i],[MODEL,[VENDOR,"LG"],[TYPE,MOBILE]],[/(lenovo)\s?(s(?:5000|6000)(?:[\w-]+)|tab(?:[\s\w]+))/i],[VENDOR,MODEL,[TYPE,TABLET]],[/android.+(ideatab[a-z0-9\-\s]+)/i],[MODEL,[VENDOR,"Lenovo"],[TYPE,TABLET]],[/(lenovo)[_\s-]?([\w-]+)/i],[VENDOR,MODEL,[TYPE,MOBILE]],[/linux;.+((jolla));/i],[VENDOR,MODEL,[TYPE,MOBILE]],[/((pebble))app\/[\d\.]+\s/i],[VENDOR,MODEL,[TYPE,WEARABLE]],[/android.+;\s(oppo)\s?([\w\s]+)\sbuild/i],[VENDOR,MODEL,[TYPE,MOBILE]],[/crkey/i],[[MODEL,"Chromecast"],[VENDOR,"Google"]],[/android.+;\s(glass)\s\d/i],[MODEL,[VENDOR,"Google"],[TYPE,WEARABLE]],[/android.+;\s(pixel c)[\s)]/i],[MODEL,[VENDOR,"Google"],[TYPE,TABLET]],[/android.+;\s(pixel( [23])?( xl)?)[\s)]/i],[MODEL,[VENDOR,"Google"],[TYPE,MOBILE]],[/android.+;\s(\w+)\s+build\/hm\1/i,/android.+(hm[\s\-_]*note?[\s_]*(?:\d\w)?)\s+build/i,/android.+(mi[\s\-_]*(?:a\d|one|one[\s_]plus|note lte)?[\s_]*(?:\d?\w?)[\s_]*(?:plus)?)\s+build/i,/android.+(redmi[\s\-_]*(?:note)?(?:[\s_]*[\w\s]+))\s+build/i],[[MODEL,/_/g," "],[VENDOR,"Xiaomi"],[TYPE,MOBILE]],[/android.+(mi[\s\-_]*(?:pad)(?:[\s_]*[\w\s]+))\s+build/i],[[MODEL,/_/g," "],[VENDOR,"Xiaomi"],[TYPE,TABLET]],[/android.+;\s(m[1-5]\snote)\sbuild/i],[MODEL,[VENDOR,"Meizu"],[TYPE,MOBILE]],[/(mz)-([\w-]{2,})/i],[[VENDOR,"Meizu"],MODEL,[TYPE,MOBILE]],[/android.+a000(1)\s+build/i,/android.+oneplus\s(a\d{4})\s+build/i],[MODEL,[VENDOR,"OnePlus"],[TYPE,MOBILE]],[/android.+[;\/]\s*(RCT[\d\w]+)\s+build/i],[MODEL,[VENDOR,"RCA"],[TYPE,TABLET]],[/android.+[;\/\s]+(Venue[\d\s]{2,7})\s+build/i],[MODEL,[VENDOR,"Dell"],[TYPE,TABLET]],[/android.+[;\/]\s*(Q[T|M][\d\w]+)\s+build/i],[MODEL,[VENDOR,"Verizon"],[TYPE,TABLET]],[/android.+[;\/]\s+(Barnes[&\s]+Noble\s+|BN[RT])(V?.*)\s+build/i],[[VENDOR,"Barnes & Noble"],MODEL,[TYPE,TABLET]],[/android.+[;\/]\s+(TM\d{3}.*\b)\s+build/i],[MODEL,[VENDOR,"NuVision"],[TYPE,TABLET]],[/android.+;\s(k88)\sbuild/i],[MODEL,[VENDOR,"ZTE"],[TYPE,TABLET]],[/android.+[;\/]\s*(gen\d{3})\s+build.*49h/i],[MODEL,[VENDOR,"Swiss"],[TYPE,MOBILE]],[/android.+[;\/]\s*(zur\d{3})\s+build/i],[MODEL,[VENDOR,"Swiss"],[TYPE,TABLET]],[/android.+[;\/]\s*((Zeki)?TB.*\b)\s+build/i],[MODEL,[VENDOR,"Zeki"],[TYPE,TABLET]],[/(android).+[;\/]\s+([YR]\d{2})\s+build/i,/android.+[;\/]\s+(Dragon[\-\s]+Touch\s+|DT)(\w{5})\sbuild/i],[[VENDOR,"Dragon Touch"],MODEL,[TYPE,TABLET]],[/android.+[;\/]\s*(NS-?\w{0,9})\sbuild/i],[MODEL,[VENDOR,"Insignia"],[TYPE,TABLET]],[/android.+[;\/]\s*((NX|Next)-?\w{0,9})\s+build/i],[MODEL,[VENDOR,"NextBook"],[TYPE,TABLET]],[/android.+[;\/]\s*(Xtreme\_)?(V(1[045]|2[015]|30|40|60|7[05]|90))\s+build/i],[[VENDOR,"Voice"],MODEL,[TYPE,MOBILE]],[/android.+[;\/]\s*(LVTEL\-)?(V1[12])\s+build/i],[[VENDOR,"LvTel"],MODEL,[TYPE,MOBILE]],[/android.+;\s(PH-1)\s/i],[MODEL,[VENDOR,"Essential"],[TYPE,MOBILE]],[/android.+[;\/]\s*(V(100MD|700NA|7011|917G).*\b)\s+build/i],[MODEL,[VENDOR,"Envizen"],[TYPE,TABLET]],[/android.+[;\/]\s*(Le[\s\-]+Pan)[\s\-]+(\w{1,9})\s+build/i],[VENDOR,MODEL,[TYPE,TABLET]],[/android.+[;\/]\s*(Trio[\s\-]*.*)\s+build/i],[MODEL,[VENDOR,"MachSpeed"],[TYPE,TABLET]],[/android.+[;\/]\s*(Trinity)[\-\s]*(T\d{3})\s+build/i],[VENDOR,MODEL,[TYPE,TABLET]],[/android.+[;\/]\s*TU_(1491)\s+build/i],[MODEL,[VENDOR,"Rotor"],[TYPE,TABLET]],[/android.+(KS(.+))\s+build/i],[MODEL,[VENDOR,"Amazon"],[TYPE,TABLET]],[/android.+(Gigaset)[\s\-]+(Q\w{1,9})\s+build/i],[VENDOR,MODEL,[TYPE,TABLET]],[/\s(tablet|tab)[;\/]/i,/\s(mobile)(?:[;\/]|\ssafari)/i],[[TYPE,util.lowerize],VENDOR,MODEL],[/[\s\/\(](smart-?tv)[;\)]/i],[[TYPE,SMARTTV]],[/(android[\w\.\s\-]{0,9});.+build/i],[MODEL,[VENDOR,"Generic"]]],engine:[[/windows.+\sedge\/([\w\.]+)/i],[VERSION,[NAME,"EdgeHTML"]],[/webkit\/537\.36.+chrome\/(?!27)/i],[[NAME,"Blink"]],[/(presto)\/([\w\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i,/(khtml|tasman|links)[\/\s]\(?([\w\.]+)/i,/(icab)[\/\s]([23]\.[\d\.]+)/i],[NAME,VERSION],[/rv\:([\w\.]{1,9}).+(gecko)/i],[VERSION,NAME]],os:[[/microsoft\s(windows)\s(vista|xp)/i],[NAME,VERSION],[/(windows)\snt\s6\.2;\s(arm)/i,/(windows\sphone(?:\sos)*)[\s\/]?([\d\.\s\w]*)/i,/(windows\smobile|windows)[\s\/]?([ntce\d\.\s]+\w)/i],[NAME,[VERSION,mapper.str,maps.os.windows.version]],[/(win(?=3|9|n)|win\s9x\s)([nt\d\.]+)/i],[[NAME,"Windows"],[VERSION,mapper.str,maps.os.windows.version]],[/\((bb)(10);/i],[[NAME,"BlackBerry"],VERSION],[/(blackberry)\w*\/?([\w\.]*)/i,/(tizen)[\/\s]([\w\.]+)/i,/(android|webos|palm\sos|qnx|bada|rim\stablet\sos|meego|sailfish|contiki)[\/\s-]?([\w\.]*)/i],[NAME,VERSION],[/(symbian\s?os|symbos|s60(?=;))[\/\s-]?([\w\.]*)/i],[[NAME,"Symbian"],VERSION],[/\((series40);/i],[NAME],[/mozilla.+\(mobile;.+gecko.+firefox/i],[[NAME,"Firefox OS"],VERSION],[/(nintendo|playstation)\s([wids34portablevu]+)/i,/(mint)[\/\s\(]?(\w*)/i,/(mageia|vectorlinux)[;\s]/i,/(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|(?=\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\/\s-]?(?!chrom)([\w\.-]*)/i,/(hurd|linux)\s?([\w\.]*)/i,/(gnu)\s?([\w\.]*)/i],[NAME,VERSION],[/(cros)\s[\w]+\s([\w\.]+\w)/i],[[NAME,"Chromium OS"],VERSION],[/(sunos)\s?([\w\.\d]*)/i],[[NAME,"Solaris"],VERSION],[/\s([frentopc-]{0,4}bsd|dragonfly)\s?([\w\.]*)/i],[NAME,VERSION],[/(haiku)\s(\w+)/i],[NAME,VERSION],[/cfnetwork\/.+darwin/i,/ip[honead]{2,4}(?:.*os\s([\w]+)\slike\smac|;\sopera)/i],[[VERSION,/_/g,"."],[NAME,"iOS"]],[/(mac\sos\sx)\s?([\w\s\.]*)/i,/(macintosh|mac(?=_powerpc)\s)/i],[[NAME,"Mac OS"],[VERSION,/_/g,"."]],[/((?:open)?solaris)[\/\s-]?([\w\.]*)/i,/(aix)\s((\d)(?=\.|\)|\s)[\w\.])*/i,/(plan\s9|minix|beos|os\/2|amigaos|morphos|risc\sos|openvms|fuchsia)/i,/(unix)\s?([\w\.]*)/i],[NAME,VERSION]]};var UAParser=function(uastring,extensions){if(typeof uastring==="object"){extensions=uastring;uastring=undefined}if(!(this instanceof UAParser)){return new UAParser(uastring,extensions).getResult()}var ua=uastring||(window&&window.navigator&&window.navigator.userAgent?window.navigator.userAgent:EMPTY);var rgxmap=extensions?util.extend(regexes,extensions):regexes;this.getBrowser=function(){var browser={name:undefined,version:undefined};mapper.rgx.call(browser,ua,rgxmap.browser);browser.major=util.major(browser.version);return browser};this.getCPU=function(){var cpu={architecture:undefined};mapper.rgx.call(cpu,ua,rgxmap.cpu);return cpu};this.getDevice=function(){var device={vendor:undefined,model:undefined,type:undefined};mapper.rgx.call(device,ua,rgxmap.device);return device};this.getEngine=function(){var engine={name:undefined,version:undefined};mapper.rgx.call(engine,ua,rgxmap.engine);return engine};this.getOS=function(){var os={name:undefined,version:undefined};mapper.rgx.call(os,ua,rgxmap.os);return os};this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}};this.getUA=function(){return ua};this.setUA=function(uastring){ua=uastring;return this};return this};UAParser.VERSION=LIBVERSION;UAParser.BROWSER={NAME:NAME,MAJOR:MAJOR,VERSION:VERSION};UAParser.CPU={ARCHITECTURE:ARCHITECTURE};UAParser.DEVICE={MODEL:MODEL,VENDOR:VENDOR,TYPE:TYPE,CONSOLE:CONSOLE,MOBILE:MOBILE,SMARTTV:SMARTTV,TABLET:TABLET,WEARABLE:WEARABLE,EMBEDDED:EMBEDDED};UAParser.ENGINE={NAME:NAME,VERSION:VERSION};UAParser.OS={NAME:NAME,VERSION:VERSION};if(typeof exports!==UNDEF_TYPE){if(typeof module!==UNDEF_TYPE&&module.exports){exports=module.exports=UAParser}exports.UAParser=UAParser}else{if(typeof define==="function"&&define.amd){define(function(){return UAParser})}else if(window){window.UAParser=UAParser}}var $=window&&(window.jQuery||window.Zepto);if(typeof $!==UNDEF_TYPE&&!$.ua){var parser=new UAParser;$.ua=parser.getResult();$.ua.get=function(){return parser.getUA()};$.ua.set=function(uastring){parser.setUA(uastring);var result=parser.getResult();for(var prop in result){$.ua[prop]=result[prop]}}}})(typeof window==="object"?window:this);
node_modules/ua-parser-js/readme.md:Chrome WebView, Chrome, Chromium, Comodo Dragon, Dillo, Dolphin, Doris, Edge,
node_modules/ua-parser-js/src/ua-parser.js:            /\swv\).+(chrome)\/([\w\.]+)/i                                      // Chrome WebView
node_modules/ua-parser-js/src/ua-parser.js:            ], [[NAME, /(.+)/, '$1 WebView'], VERSION], [
